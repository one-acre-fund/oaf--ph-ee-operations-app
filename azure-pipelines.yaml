trigger:
  branches:
    include:
      - main
      - develop
      - release/*
  paths:
    exclude:
      - README.md

pr:
  branches:
    include:
      - main
      - develop
  paths:
    exclude:
      - README.md

pool:
  vmImage: "ubuntu-latest"

name: Oaf-PaymentHub_$(Date:yyyyMMdd)$(Rev:.r)

steps:
  - script: |
      VERSION_TAG=`git describe --abbrev=0 --tags`
      echo "##vso[task.setvariable variable=VERSION_TAG]$VERSION_TAG"
      IMAGE_TAGS="${VERSION_TAG}"
      echo "##vso[task.setvariable variable=IMAGE_SEMANTIC_HASH]$IMAGE_TAGS"
      if [[ "$(Build.SourceBranch)" == "refs/heads/main" ]]; then IMAGE_TAGS="$IMAGE_TAGS,latest"; fi;
      echo Tags: $IMAGE_TAGS
      echo "##vso[task.setvariable variable=IMAGE_TAGS]$IMAGE_TAGS"
    displayName: Get git tag

  - script: |
      docker run -v "$(System.DefaultWorkingDirectory):/tmp/lint" \
      -e GIT_AUTHORIZATION_BEARER=$(System.AccessToken) \
      -e CI=true \
      -e TF_BUILD=true \
      -e SYSTEM_ACCESSTOKEN=$(System.AccessToken) \
      -e SYSTEM_COLLECTIONURI=$(System.CollectionUri) \
      -e SYSTEM_PULLREQUEST_PULLREQUESTID=$(System.PullRequest.PullRequestId) \
      -e SYSTEM_TEAMPROJECT=$(System.TeamProject) \
      -e BUILD_BUILD_ID=$(Build.BuildId) \
      -e BUILD_REPOSITORY_ID=$(Build.Repository.ID) \
      oxsecurity/megalinter-java:v6
    displayName: Run MegaLinter

  - task: Docker@2
      displayName: Login to Azure registry
      inputs:
        containerRegistry: azurecr-oaf
        command: "login"

  - task: Docker@2
      displayName: push image to registry
      condition: and(succeeded(), or(eq(variables['Build.SourceBranchName'], 'main'), eq(variables['Build.SourceBranchName'], 'develop'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')))
      inputs:
        containerRegistry: "azurecr-oaf"
        repository: "oneacrefund/paymenthub-backend"
        command: "push"
        tags: "$(IMAGE_TAGS)"

  - task: PublishBuildArtifacts@1
      displayName: Publish configuration package
      condition: and(succeeded(), or(eq(variables['Build.SourceBranchName'], 'main'), eq(variables['Build.SourceBranchName'], 'develop'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')))
      inputs:
        PathtoPublish: $(Build.ArtifactStagingDirectory)
        ArtifactName: "paymenthub-backend"
        publishLocation: "Container"
